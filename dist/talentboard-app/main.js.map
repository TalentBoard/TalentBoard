{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/applicant-list/applicant-list.component.ts","webpack:///./src/app/applicant/applicant.component.html","webpack:///./src/app/applicant/applicant.component.ts","webpack:///./src/app/column/column.component.html","webpack:///./src/app/column/column.component.ts","webpack:///./src/app/core/applicant.service.ts","webpack:///./src/app/core/auth.guard.ts","webpack:///./src/app/core/auth.service.ts","webpack:///./src/app/core/job.service.ts","webpack:///./src/app/core/storage.service.ts","webpack:///./src/app/core/user.service.ts","webpack:///./src/app/job-form/job-form.component.html","webpack:///./src/app/job-form/job-form.component.ts","webpack:///./src/app/job-list/job-list.component.html","webpack:///./src/app/job-list/job-list.component.ts","webpack:///./src/app/job/job.component.html","webpack:///./src/app/job/job.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/model/Applicant.ts","webpack:///./src/app/model/Job.ts","webpack:///./src/app/model/User.ts","webpack:///./src/app/nav-bar/nav-bar.component.html","webpack:///./src/app/nav-bar/nav-bar.component.ts","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/temp-apply/temp-apply.component.html","webpack:///./src/app/temp-apply/temp-apply.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<router-outlet></router-outlet>\n\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { rootRouterConfig } from './app.routes';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { AngularFireStorageModule } from 'angularfire2/storage';\nimport { environment } from '../environments/environment';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuard } from './core/auth.guard';\nimport { UserService } from './core/user.service';\nimport { JobService } from './core/job.service';\nimport { ApplicantService } from './core/applicant.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from './core/auth.service';\nimport { StorageService } from './core/storage.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { SuiModule, SuiDropdownModule } from 'ng2-semantic-ui';\nimport { ColumnComponent } from './column/column.component';\nimport { ApplicantComponent } from './applicant/applicant.component';\nimport { DndModule } from 'ng2-dnd';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { JobComponent } from './job/job.component';\nimport { ApplicantListComponent } from './applicant-list/applicant-list.component';\nimport { JobListComponent } from './job-list/job-list.component';\nimport { TempApplyComponent } from './temp-apply/temp-apply.component';\nimport { JobFormComponent } from './job-form/job-form.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    NavBarComponent,\n    ColumnComponent,\n    ApplicantComponent,\n    JobComponent,\n    ApplicantListComponent,\n    JobListComponent,\n    TempApplyComponent,\n    JobFormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    SuiModule,\n    SuiDropdownModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule.forRoot(rootRouterConfig),\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    AngularFireStorageModule,\n    DndModule.forRoot(),\n    FormsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    AuthService,\n    UserService,\n    JobService,\n    ApplicantService,\n    AuthGuard,\n    StorageService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Applicant } from '../model/Applicant';\n\n@Component({\n  selector: 'app-applicant-list',\n  templateUrl: './applicant-list.component.html',\n  styleUrls: ['./applicant-list.component.scss']\n})\nexport class ApplicantListComponent implements OnInit {\n\n  constructor() { }\n\n  applicants: Array<Applicant> = [];\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"ui card applicant-card\" dnd-draggable (click)=\"openProfileModal()\">\n  <div class=\"content\">\n    <div class=\"applicant-name\">\n      {{ applicant.name }}\n    </div>\n    <div class=\"meta\">\n      <span class=\"category\">{{ applicant.currentTitle }} @ {{ applicant.currentEmployer }}</span>\n    </div>\n  </div>\n  <div class=\"extra content\">\n    <span class=\"right floated\">\n      <i class=\"star icon\" [ngClass]=\"{'active': isFavourite()}\"></i>\n    </span>\n    <div class=\"left floated author\" *ngIf=\"assignedUser\">\n      <img class=\"ui avatar image\" src=\"{{ assignedUser.profileURL }}\"> {{ assignedUser.name }}\n    </div>\n  </div>\n</div>\n\n<ng-template let-context let-modal=\"modal\" #applicantModal>\n  <div class=\"content\">\n\n    <div class=\"ui large header\">\n      {{ applicant.name }}\n      <span class=\"right floated\">\n        <i class=\"grey star icon\"></i>\n      </span>\n      <div class=\"sub header\">{{ applicant.email }}</div>\n    </div>\n\n    <div class=\"ui clearing divider\"></div>\n    <div class=\"ui sub header\">Status</div>\n    <sui-select [(ngModel)]=\"applicant.status\" name=\"status\">\n      <sui-select-option value=\"Applied\"></sui-select-option>\n      <sui-select-option value=\"Phone Interview\"></sui-select-option>\n      <sui-select-option value=\"In Person Interview\"></sui-select-option>\n      <sui-select-option value=\"Declined\"></sui-select-option>\n      <sui-select-option value=\"Sent Offer\"></sui-select-option>\n    </sui-select>\n\n    <div class=\"ui sub header\">Phone Number</div>\n    <span>{{ applicant.phoneNumber }}</span>\n\n    <div class=\"ui sub header\">About</div>\n    <span>{{ applicant.about }}\n    </span>\n    <a href=\"\">\n      <div class=\"ui tiny header\">\n        View Resume\n        <span class=\"right floated\">\n          <i class=\"external alternate icon\"></i>\n        </span>\n      </div>\n    </a>\n    <a href=\"\">\n      <div class=\"ui tiny header\">\n        View Cover Letter\n        <span class=\"right floated\">\n          <i class=\"external alternate icon\"></i>\n        </span>\n      </div>\n    </a>\n\n  </div>\n  <div class=\"actions\">\n    <a href=\"mailto:{{ applicant.email }}?Subject=Hello\">\n    <button class=\"ui primary button\">Send Email</button></a>\n    <button class=\"ui green button\" (click)=\"modal.approve()\" autofocus>Close</button>\n  </div>\n</ng-template>\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { Applicant } from '../model/Applicant';\nimport { User } from '../model/User';\nimport { SuiModalService, ModalTemplate, TemplateModalConfig } from '../../../node_modules/ng2-semantic-ui';\nimport { UserService } from '../core/user.service';\n\n@Component({\n  selector: 'app-applicant',\n  templateUrl: './applicant.component.html',\n  styleUrls: ['./applicant.component.scss']\n})\nexport class ApplicantComponent implements OnInit {\n\n  @Input() applicant: Applicant;\n  assignedUser: User;\n\n  @ViewChild('applicantModal')\n  public applicantModal: ModalTemplate<{}, void, void>;\n\n  constructor(private modalService: SuiModalService, private userService: UserService) { }\n\n  ngOnInit() {\n    this.getAssignedUser();\n  }\n\n  getAssignedUser() {\n    if (this.applicant.assignedUserId !== '') {\n      this.userService.getUserById(this.applicant.assignedUserId).subscribe(user => {\n        console.log(user);\n        this.assignedUser = user;\n      });\n    }\n  }\n\n  isFavourite(): boolean {\n    // return this.applicant.favouritedUserIds.includes(currentUserId);\n    return false;\n  }\n\n  openProfileModal() {\n    const config = new TemplateModalConfig<{}, void, void>(this.applicantModal);\n    config.isClosable = false;\n    config.size = 'small';\n    config.transition = 'fade up';\n    config.transitionDuration = 400;\n\n    this.modalService\n      .open(config)\n      .onApprove(_ => { console.log(this.applicant); })\n      .onDeny(_ => { });\n  }\n}\n","<div id=\"column\" class=\"ui segment\" dnd-droppable (onDropSuccess)=\"addItem($event)\">\n  <div class=\"content column-title\">\n\n    {{name}}\n\n    <div class=\"ui secondary right pointing dropdown job-column-settings\" suiDropdown autoClose=\"outsideClick\">\n      <i class=\"ellipsis vertical icon\"></i>\n      <div class=\"menu\" suiDropdownMenu>\n        <div class=\"item\" (click)=\"openAddApplicantModal('Add Applicant', newApplicant)\"><i class=\"plus icon\"></i>Add\n          Applicant</div>\n        <div class=\"item\"><i class=\"tasks icon\"></i>Edit Stage</div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"job-column\">\n    <app-applicant *ngFor=\"let applicantId of applicants.keys()\" [applicant]=\"applicants.getValue(applicantId)\" dnd-draggable [dragEnabled]=\"true\"\n      [dragData]=\"applicants.getValue(applicantId)\" (onDragSuccess)=\"removeItem($event)\"></app-applicant>\n  </div>\n</div>\n\n<ng-template let-context let-modal=\"modal\" #applicantModal>\n  <div class=\"header\">{{ context.title }}</div>\n  <div class=\"content\">\n    <form class=\"ui form\">\n      <div class=\"field\">\n        <label for=\"title\">Name *</label>\n        <input type=\"text\" id=\"name\" required [(ngModel)]=\"context.applicant.name\" name=\"title\">\n      </div>\n      <div class=\"field\">\n        <label for=\"title\">Email *</label>\n        <input type=\"text\" id=\"email\" required [(ngModel)]=\"context.applicant.email\" name=\"email\">\n      </div>\n      <div class=\"field\">\n        <label for=\"title\">Phone Number</label>\n        <input type=\"text\" id=\"phoneNumber\" [(ngModel)]=\"context.applicant.phoneNumber\" name=\"phoneNumber\">\n      </div>\n      <div class=\"field\">\n        <label for=\"title\">Current Title</label>\n        <input type=\"text\" id=\"title\" [(ngModel)]=\"context.applicant.currentTitle\" name=\"title\">\n      </div>\n      <div class=\"field\">\n        <label for=\"title\">Current Employer</label>\n        <input type=\"text\" id=\"employer\" [(ngModel)]=\"context.applicant.currentEmployer\" name=\"employer\">\n      </div>\n    </form>\n  </div>\n  <div class=\"actions\">\n      <button class=\"ui red button\" (click)=\"modal.deny()\">Cancel</button>\n    <button class=\"ui green button\" (click)=\"modal.approve()\" autofocus>Create</button>\n  </div>\n</ng-template>\n","import {Component, Input, ViewChild, SimpleChanges, OnChanges} from '@angular/core';\nimport { Applicant } from '../model/Applicant';\nimport { User } from '../model/User';\nimport { SuiModalService, ModalTemplate, TemplateModalConfig } from '../../../node_modules/ng2-semantic-ui';\nimport { ApplicantService } from '../core/applicant.service';\nimport * as Collections from 'typescript-collections';\nimport {Job} from '../model/Job';\n\nexport interface IContext {\n  title: string;\n  applicant: Applicant;\n}\n\n@Component({\n  selector: 'app-column',\n  templateUrl: './column.component.html',\n  styleUrls: ['./column.component.scss']\n})\nexport class ColumnComponent implements OnChanges {\n\n  @Input() name: string;\n  @Input() applicants: Collections.Dictionary<String, Applicant> = new Collections.Dictionary<String, Applicant>();\n\n  applicant: Applicant;\n  currentUser: User;\n\n  @ViewChild('applicantModal')\n  public applicantModal: ModalTemplate<IContext, void, void>;\n  public newApplicant: Applicant = new Applicant();\n\n  constructor(private modalService: SuiModalService, private applicantService: ApplicantService) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.currentUser = JSON.parse(localStorage.getItem('user'));\n  }\n\n\n  removeItem(e: any) {\n    const applicant: Applicant = e.dragData;\n    this.applicants.remove(applicant.id);\n    // const index = this.applicants.map((value: Applicant) => {\n    //   return value.id;\n    // }).indexOf(applicant.id);\n    // if (index !== -1) {\n    //   this.applicants.splice(index, 1);\n    // }\n  }\n\n  addItem(e: any) {\n    const applicant: Applicant = e.dragData;\n    if (applicant.status === this.name) {\n      this.applicants.setValue(applicant.id, applicant);\n    } else {\n      applicant.status = this.name;\n      this.applicantService.updateApplicant(applicant.id, applicant);\n    }\n  }\n\n  sortItems() {\n    // this.applicants.sort((a: Applicant, b: Applicant) => {\n    //   return a.name.localeCompare(b.name);\n    // });\n  }\n\n  openAddApplicantModal(title: string, applicant: Applicant) {\n    const config = new TemplateModalConfig<IContext, void, void>(this.applicantModal);\n    config.isClosable = false;\n    config.size = 'small';\n    config.transition = 'fade up';\n    config.transitionDuration = 400;\n    config.context = { title: title, applicant: applicant };\n    this.newApplicant.status = this.name;\n\n    this.modalService\n      .open(config)\n      .onApprove(_ => {\n        this.applicantService.addApplicant(this.newApplicant, this.currentUser.currentJobView);\n        this.newApplicant = new Applicant();\n      })\n      .onDeny(_ => { });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase} from 'angularfire2/database';\nimport { Applicant } from '../model/Applicant';\nimport { Observable } from 'rxjs/Observable';\nimport { NgForm } from '@angular/forms';\nimport { JobService } from './job.service';\n\n@Injectable()\nexport class ApplicantService {\n\n  applicants: Observable<Applicant[]>;\n  currentApplicant: Applicant;\n\n  constructor(private db: AngularFireDatabase, private jobService: JobService) {\n    this.applicants = db.list<Applicant>('applicants').valueChanges();\n  }\n\n  getAllApplicants(): Observable<Applicant[]> {\n    return this.applicants;\n  }\n\n  addApplicant(applicant: Applicant, jobId: string) {\n    applicant.id = this.db.createPushId();\n    this.db.list<Applicant>('applicants').set(applicant.id, applicant);\n    this.jobService.addApplicantToJob(applicant.id, jobId);\n  }\n\n  getApplicantById(id: string): Observable<Applicant> {\n    return this.db.object<Applicant>(`applicants/${id}`).valueChanges();\n  }\n\n  updateApplicant(id: string, updatedApplicant: Applicant) {\n    this.db.list<Applicant>('applicants').set(id, updatedApplicant);\n  }\n\n  getApplicantByStatus(status: string) {\n    return this.db.list('applicants', ref => {\n      const q = ref.orderByChild('status').equalTo(status);\n      return q;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { UserService } from './user.service';\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    public afAuth: AngularFireAuth,\n    public userService: UserService,\n    private router: Router\n  ) {}\n\n  canActivate(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user == null) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { auth } from 'firebase';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  constructor(private afAuth: AngularFireAuth, private router: Router) { }\r\n\r\n  googleLogin(): Promise<auth.UserCredential> {\r\n    return this.afAuth.auth.signInWithPopup(new auth.GoogleAuthProvider());\r\n  }\r\n\r\n  emailLogin(email: string, password: string): Promise<auth.UserCredential> {\r\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  registerUser(email: string, password: string): Promise<auth.UserCredential> {\r\n    return this.afAuth.auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  logout() {\r\n    this.afAuth.auth.signOut();\r\n    localStorage.removeItem('user');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Job } from '../model/Job';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { map } from 'rxjs/operators';\nimport { UserService } from './user.service';\n\n@Injectable()\nexport class JobService {\n\n  jobRef = this.db.list<Job>('jobs');\n  jobs: Observable<Job[]>;\n\n  constructor(private db: AngularFireDatabase, private userService: UserService) {\n    this.jobs = this.jobRef.valueChanges();\n  }\n\n  getAllJobs(): Observable<Job[]> {\n    return this.jobs;\n  }\n\n  addJob(job: Job) {\n    job.id = this.db.createPushId();\n    this.jobRef.set(job.id, job);\n  }\n\n  getJobById(id: string): Observable<Job> {\n    return this.db.object<Job>(`jobs/${id}`).valueChanges();\n  }\n\n  updateJob(id: string, updatedJob: Job) {\n    this.db.object<Job>(`jobs/${id}`).update(updatedJob);\n  }\n\n  addApplicantToJob(applicantId: string, jobId: string) {\n    this.db.list(`jobs/${jobId}/applicantIds`).set(applicantId, applicantId);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Observable } from 'rxjs/Observable';\nimport { User } from '../model/User';\n\n@Injectable()\nexport class UserService {\n\n  users: Observable<User[]>;\n\n  constructor(public db: AngularFireDatabase) {\n    this.users = db.list<User>('users').valueChanges();\n  }\n\n  getAllUsers(): Observable<User[]> {\n    return this.users;\n  }\n\n  createUser(user: User) {\n    this.db.list<User>('users').set(user.id, user);\n  }\n\n  getUserById(id: string): Observable<User> {\n    return this.db.object<User>(`users/${id}`).valueChanges();\n  }\n\n  updateUser(id: string, updatedUser: User) {\n    this.db.list<User>('users').set(id, updatedUser);\n  }\n}\n","<ng-template let-context let-modal=\"modal\" #jobModal>\n  <div class=\"header\">{{ context.title }}</div>\n  <div class=\"content\">\n    <form class=\"ui form\">\n      <div class=\"field\">\n        <label for=\"title\">Job Title</label>\n        <input type=\"text\" id=\"title\" required [(ngModel)]=\"context.job.title\" name=\"title\">\n      </div>\n      <div class=\"field\">\n        <label for=\"description\">Job Description</label>\n        <textarea id=\"description\" rows=\"8\" required [(ngModel)]=\"context.job.description\"\n                  name=\"description\"></textarea>\n      </div>\n      <div class=\"field\">\n        <label for=\"location\">Location</label>\n        <sui-select class=\"selection\" [(ngModel)]=\"context.job.location\" name=\"location\">\n          <sui-select-option *ngFor=\"let option of locations\" [value]=\"option\">\n          </sui-select-option>\n        </sui-select>\n      </div>\n      <div class=\"field\">\n        <label for=\"salary\">Salary</label>\n        <div class=\"ui labeled input\">\n          <div class=\"ui label\">$</div>\n          <input type=\"text\" id=\"salary\" required [(ngModel)]=\"context.job.salary\" name=\"salary\">\n        </div>\n      </div>\n    </form>\n  </div>\n  <div class=\"actions\">\n    <button class=\"ui red button\" (click)=\"modal.deny()\">Cancel</button>\n    <button class=\"ui green button\" (click)=\"modal.approve()\" autofocus>OK</button>\n  </div>\n</ng-template>\n<!--<div id=\"step1\" *ngIf=\"step === 1\">-->\n<!--<form></form>-->\n<!--</div>-->\n\n<!--<div id=\"step2\" *ngIf=\"step === 2\">-->\n<!--<form></form>-->\n<!--</div>-->\n\n<!--<div id=\"step3\" *ngIf=\"step === 3\">-->\n<!--<form></form>-->\n<!--</div>-->\n","import {Component, EventEmitter, Output, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport { Job } from '../model/Job';\nimport { ModalTemplate, TemplateModalConfig, SuiModalService } from 'ng2-semantic-ui';\nimport { JobService } from '../core/job.service';\nimport { UserService } from '../core/user.service';\nimport { User } from '../model/User';\n\nexport interface IContext {\n  title: string;\n  job: Job;\n}\n\n@Component({\n  selector: 'app-job-form',\n  templateUrl: './job-form.component.html',\n  styleUrls: ['./job-form.component.scss']\n})\n\nexport class JobFormComponent implements OnInit {\n\n  currentUser: User;\n  locations = [\n    'Calgary, AB',\n    'Halifax, NS',\n    'Montreal, QC',\n    'Ottawa, ON',\n    'Toronto, ON',\n    'Vancouver, BC',\n  ];\n\n  @ViewChild('jobModal')\n  public jobModal: ModalTemplate<IContext, void, void>;\n  public newJob: Job = new Job();\n\n  @Output() toggleJobModal = new EventEmitter<void>();\n\n  public onKeydown(event, nextView = null) {\n    if (nextView == null) {\n      document.getElementById('create-job' + nextView).focus();\n    }\n    if (event.key === 'Enter') {\n      document.getElementById('input-' + nextView).focus();\n    }\n  }\n\n  constructor(private modalService: SuiModalService,\n              private jobService: JobService,\n              private userService: UserService,\n              private cd: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    this.currentUser = JSON.parse(localStorage.getItem('user'));\n    setTimeout(() => {\n      this.openJobModal('Add job', this.newJob);\n    });\n  }\n\n  openJobModal(title: string, job: Job) {\n    const config = new TemplateModalConfig<IContext, void, void>(this.jobModal);\n    config.isClosable = false;\n    config.size = 'small';\n    config.transition = 'fade up';\n    config.transitionDuration = 400;\n    config.context = {title: title, job: job};\n\n    this.modalService\n      .open(config)\n      .onApprove(_ => {\n        if (job.id) {\n          this.jobService.updateJob(job.id, job);\n          localStorage.setItem('user', JSON.stringify(this.currentUser));\n          location.reload();\n        } else {\n          this.jobService.addJob(this.newJob);\n          this.currentUser.jobIds.push(job.id);\n          this.currentUser.currentJobView = job.id;\n          this.userService.updateUser(this.currentUser.id, this.currentUser);\n          this.newJob = new Job();\n          localStorage.setItem('user', JSON.stringify(this.currentUser));\n          location.reload();\n          this.toggleJobModal.emit();\n        }\n      })\n      .onDeny(_ => {\n        this.toggleJobModal.emit();\n      });\n  }\n}\n","<div class=\"container\" style=\"margin-top: 20px;\">\n  <h2 style=\"margin-left:50px;\">Job View</h2>\n  <div class=\"ui divider\" style=\"margin-left: 50px; margin-right: 50px;\"></div>\n  <div *ngFor=\"let job of jobs\" class=\"ui raised segment\" id=\"job-item\">\n    <div class=\"ui grid\">\n      <div class=\"four column row\">\n        <div class=\"left floated column\">\n          <i *ngIf=\"job.isOpen==true;\" class=\"circle icon green job-status-icon\"></i>\n          <i *ngIf=\"job.isOpen==false;\" class=\"circle icon red job-status-icon\"></i>\n          {{ job.title }}\n          <i class=\"edit basic icon job-edit-icon\"></i>\n        </div>\n        <div class=\"right floated column\">\n          <button class=\"ui button right floated\" style=\"bottom: 20px !important;\" (click)=\"viewJobBoard(job)\">\n            <i class=\"columns icon\"></i>View Board\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Job } from '../model/Job';\nimport { User } from '../model/User';\nimport { JobService } from '../core/job.service';\nimport { NavBarComponent } from '../nav-bar/nav-bar.component';\n\n@Component({\n  selector: 'app-job-list',\n  templateUrl: './job-list.component.html',\n  styleUrls: ['./job-list.component.scss']\n})\nexport class JobListComponent implements OnInit {\n\n  currentUser: User;\n  jobs: Array<Job> = [];\n\n  constructor(private jobService: JobService, private navBarComponent: NavBarComponent) { }\n\n  ngOnInit() {\n    this.jobs = [];\n    this.currentUser = JSON.parse(localStorage.getItem('user'));\n    for (const jobId of this.currentUser.jobIds) {\n      this.jobService.getJobById(jobId).subscribe(job => {\n        this.jobs.push(job);\n      });\n    }\n  }\n\n  viewJobBoard(job: Job) {\n    this.currentUser.currentJobView = job.id;\n    localStorage.setItem('user', JSON.stringify(this.currentUser));\n    this.navBarComponent.updateCurrentView('kanban');\n  }\n\n}\n\n","<div *ngIf=\"getNumberOfJobs() == 0\">\n\n  <div style=\"margin-top: 200px;\" class=\"ui two column centered grid\">\n    <h2>You don't have any jobs.</h2>\n  </div>\n\n  <div style=\"margin-top: 25px;\" class=\"ui two column centered grid\">\n    <button class=\"ui button\" (click)=\"toggleJobModal = true\">\n      <i class=\"plus icon\"></i>Add Job\n    </button>\n  </div>\n\n</div>\n<div *ngIf=\"getNumberOfJobs() > 0\">\n  <div class=\"ui segment\">\n    <div class=\"ui two column grid\">\n      <div class=\"column\">\n        <div class=\"job-title\">\n          <i class=\"circle icon job-status-icon\" [ngClass]=\"currentJob.isOpen ? 'green' : 'red' \"></i>\n          {{ currentJob.title }}\n          <i class=\"edit basic icon job-edit-icon\" (click)=\"toggleJobModal = true\"></i>\n        </div>\n      </div>\n\n      <div class=\"column\">\n        <button class=\"ui button right floated\" (click)=\"toggleJobModal = true\">\n          <i class=\"plus icon\"></i>Add Job\n        </button>\n\n        <div class=\"ui button dropdown right floated\" suiDropdown autoClose=\"itemClick\">\n          <div class=\"text\">Select Job</div>\n          <i class=\"dropdown icon\"></i>\n          <div class=\"menu\" suiDropdownMenu>\n            <div class=\"item\" *ngFor=\"let jobId of jobs.keys()\" (click)=\"changeCurrentJob(jobId)\">{{ jobs.getValue(jobId).title }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div id=\"jobContainer\" class=\"ui container\">\n    <div id=\"job-column\">\n      <app-column [name]='\"Applied\"' [applicants]=\"applied\"></app-column>\n    </div>\n    <div id=\"job-column\">\n      <app-column [name]='\"Phone Interview\"' [applicants]=\"phoneInterview\"></app-column>\n    </div>\n    <div id=\"job-column\">\n      <app-column [name]='\"In Person Interview\"' [applicants]=\"personInterview\"></app-column>\n    </div>\n    <div id=\"job-column\">\n      <app-column [name]='\"Declined\"' [applicants]=\"declined\"></app-column>\n    </div>\n    <div id=\"job-column\">\n      <app-column [name]='\"Sent Offer\"' [applicants]=\"offer\"></app-column>\n    </div>\n  </div>\n</div>\n\n<app-job-form *ngIf=\"toggleJobModal\" (toggleJobModal)=\"toggleJobModal = false\"></app-job-form>\n","import {AfterContentInit, Component, OnChanges, OnInit} from '@angular/core';\nimport { Job } from '../model/Job';\nimport { Applicant } from '../model/Applicant';\nimport { JobService } from '../core/job.service';\nimport { UserService } from '../core/user.service';\nimport { ApplicantService } from '../core/applicant.service';\nimport { User } from '../model/User';\nimport * as Collections from 'typescript-collections';\n\n@Component({\n  selector: 'app-job',\n  templateUrl: './job.component.html',\n  styleUrls: ['./job.component.scss']\n})\nexport class JobComponent implements AfterContentInit {\n\n  currentUser: User;\n  currentJob: Job = new Job();\n\n  jobs = new Collections.Dictionary<String, Job>();\n  applied = new Collections.Dictionary<String, Applicant>();\n  phoneInterview = new Collections.Dictionary<String, Applicant>();\n  personInterview = new Collections.Dictionary<String, Applicant>();\n  declined = new Collections.Dictionary<String, Applicant>();\n  offer = new Collections.Dictionary<String, Applicant>();\n\n  toggleJobModal = false;\n\n  constructor(private jobService: JobService,\n    private userService: UserService,\n    private applicantService: ApplicantService) { }\n\n  ngAfterContentInit() {\n    this.currentUser = JSON.parse(localStorage.getItem('user'));\n\n    if (this.currentUser.jobIds) {\n      this.fetchAllJobs();\n    }\n\n    if (this.currentUser.currentJobView) {\n      this.fetchAllApplicants();\n    }\n  }\n\n  fetchAllJobs() {\n    this.clearAllJobs();\n    for (const jobId of this.currentUser.jobIds) {\n      this.jobService.getJobById(jobId).subscribe(updatedJob => {\n        this.jobs.setValue(updatedJob.id, updatedJob);\n      });\n    }\n  }\n\n  fetchAllApplicants() {\n    this.clearAllApplicants();\n    this.jobService.getJobById(this.currentUser.currentJobView).subscribe(currentJob => {\n      this.currentJob = currentJob;\n      if (currentJob.applicantIds) {\n        for (const applicantId of Object.values(currentJob.applicantIds)) {\n          this.applicantService.getApplicantById(applicantId).subscribe(currentApplicant => {\n            switch (currentApplicant.status) {\n              case ('Applied'):\n                this.applied.setValue(currentApplicant.id, currentApplicant);\n                break;\n              case ('Phone Interview'):\n                this.phoneInterview.setValue(currentApplicant.id, currentApplicant);\n                break;\n              case ('In Person Interview'):\n                this.personInterview.setValue(currentApplicant.id, currentApplicant);\n                break;\n              case ('Declined'):\n                this.declined.setValue(currentApplicant.id, currentApplicant);\n                break;\n              case ('Sent Offer'):\n                this.offer.setValue(currentApplicant.id, currentApplicant);\n                break;\n            }\n          });\n        }\n      }\n    });\n  }\n\n  clearAllApplicants() {\n    this.applied = new Collections.Dictionary<String, Applicant>();\n    this.phoneInterview = new Collections.Dictionary<String, Applicant>();\n    this.personInterview = new Collections.Dictionary<String, Applicant>();\n    this.declined = new Collections.Dictionary<String, Applicant>();\n    this.offer = new Collections.Dictionary<String, Applicant>();\n  }\n\n  clearAllJobs() {\n    this.jobs = new Collections.Dictionary<String, Job>();\n  }\n\n  changeCurrentJob(id: string) {\n    this.currentJob = this.jobs.getValue(id);\n    this.currentUser.currentJobView = id;\n    this.userService.updateUser(this.currentUser.id, this.currentUser);\n    localStorage.setItem('user', JSON.stringify(this.currentUser));\n    this.fetchAllApplicants();\n  }\n\n  getNumberOfJobs() {\n    if (this.currentUser.jobIds == null) {\n      return 0;\n    }\n    return this.currentUser.jobIds.length;\n  }\n\n}\n\n","<div class=\"ui container\" id=\"container-log-in\">\n  <img class=\"ui centered medium image\" src=\"../../assets/images/logo-black-variant.svg\">\n  <div class=\"ui basic segment\">\n    <div class=\"content\">\n      <form class=\"ui form\" (ngSubmit)=\"emailLogin()\">\n        <div class=\"ui left icon input fluid\">\n          <input type=\"email\" [(ngModel)]=\"credentials.email\" placeholder=\"Email address\" name=\"email\">\n          <i class=\"user icon\"></i>\n        </div>\n        <div class=\"ui left icon input fluid\" id=\"input-login\">\n          <input type=\"password\" [(ngModel)]=\"credentials.password\" placeholder=\"Password\" name=\"password\">\n          <i class=\"lock icon\"></i>\n        </div>\n        <button type=\"submit\" class=\"ui fluid button instagram button-login\">Login</button>\n      </form>\n      <div class=\"ui horizontal divider\">\n        Or\n      </div>\n    </div>\n    <button type=\"button\" class=\"ui fluid black button\" (click)=\"googleLogin()\" id=\"log-in-service\">\n      <i class=\"google icon\"></i>\n      Login with Gmail\n    </button>\n  </div>\n  <div class=\"ui basic segment center aligned\">\n    New to Talentboard?\n    <a routerLink=\"/register\" routerLinkActive=\"active\">Create an account</a>.\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/auth.service';\nimport { User } from '../model/User';\nimport { UserService } from '../core/user.service';\nimport { ToastrService } from '../../../node_modules/ngx-toastr';\n\n@Component({\n  selector: 'app-page-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n  credentials = {\n    email: '',\n    password: ''\n  };\n\n  constructor(private authService: AuthService, private userService: UserService, private toastr: ToastrService, private router: Router) { }\n\n  googleLogin() {\n    this.authService.googleLogin().then(res => {\n      const currentUser: User = new User();\n      const fbUser = res.user;\n\n      if (res.additionalUserInfo.isNewUser) {\n        currentUser.id = fbUser.uid;\n        currentUser.name = fbUser.displayName;\n        currentUser.email = fbUser.email;\n        currentUser.profileURL = fbUser.photoURL;\n        currentUser.currentJobView = '';\n        currentUser.jobIds = [];\n        localStorage.setItem('user', JSON.stringify(currentUser));\n        this.userService.createUser(currentUser);\n        this.router.navigate(['/app']);\n        location.reload();\n      } else {\n        this.userService.getUserById(fbUser.uid).subscribe(user => {\n          if (!user.jobIds) {\n            user.jobIds = []; // temp fix because firebase doesn't store empty lists\n          }\n          localStorage.setItem('user', JSON.stringify(user));\n          this.router.navigate(['/app']);\n        });\n      }\n    }, err => {\n      this.handleError(err.code);\n    });\n  }\n\n  emailLogin() {\n    this.authService.emailLogin(this.credentials.email, this.credentials.password).then(res => {\n      const userId = res.user.uid;\n      this.userService.getUserById(userId).subscribe(user => {\n        if (!user.jobIds) {\n            user.jobIds = []; // temp fix because firebase doesn't store empty lists\n          }\n        localStorage.setItem('user', JSON.stringify(user));\n        this.router.navigate(['/app']);\n      });\n    }, err => {\n      this.handleError(err.code);\n    });\n  }\n\n  handleError(errorCode: string) {\n    if (this.credentials.email === '' || this.credentials.password === '') {\n      this.toastr.error('Must provide both email and password', 'Error');\n      return;\n    }\n    switch (errorCode) {\n      case 'auth/invalid-email': {\n        this.toastr.error('Invalid email format', 'Error');\n        break;\n      }\n      case 'auth/user-not-found': {\n        this.toastr.error('User does not exist', 'Error');\n        break;\n      }\n      case 'auth/wrong-password': {\n        this.toastr.error('Incorrect email or password', 'Error');\n        break;\n      }\n      case 'auth/network-request-failed': {\n        this.toastr.error('No network connection', 'Error');\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n}\n","export class Applicant {\r\n  public id: string;\r\n  public name: string;\r\n  public email: string;\r\n  public phoneNumber: string;\r\n  public status: string;\r\n  public about: string;\r\n  public resumeURL: string;\r\n  public coverLetterURL: string;\r\n  public currentEmployer: string;\r\n  public currentTitle: string;\r\n  public favouritedUserIds: Array<string>;\r\n  public assignedUserId: string;\r\n  public jobId: string;\r\n\r\n  constructor() {\r\n    this.name = '';\r\n    this.email = '';\r\n    this.phoneNumber = '';\r\n    this.status = 'Applied';\r\n    this.about = '';\r\n    this.resumeURL = '';\r\n    this.coverLetterURL = '';\r\n    this.currentEmployer = '';\r\n    this.currentTitle = '';\r\n    this.favouritedUserIds = [];\r\n    this.assignedUserId = '';\r\n    this.jobId = '';\r\n  }\r\n}\r\n","export class Job {\r\n  public id: string;\r\n  public title: string;\r\n  public description: string;\r\n  public location: string;\r\n  public salary: string;\r\n  public applicantIds: Array<string>;\r\n  public isOpen: boolean;\r\n\r\n  constructor() {\r\n    this.title = '';\r\n    this.description = '';\r\n    this.location = '';\r\n    this.salary = '';\r\n    this.applicantIds = [];\r\n    this.isOpen = true;\r\n  }\r\n}\r\n","export class User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  title: string;\r\n  company: string;\r\n  jobIds: Array<string>;\r\n  currentJobView: string;\r\n  profileURL: string;\r\n\r\n  constructor() {\r\n    this.id = '';\r\n    this.name = '';\r\n    this.email = '';\r\n    this.jobIds = [];\r\n    this.currentJobView = '';\r\n    this.profileURL = '';\r\n  }\r\n}\r\n","<sui-sidebar-container class=\"ui bottom attached segment\">\n  <sui-sidebar class=\"inverted vertical\" #sidebar>\n    <a class=\"item\" href=\"/\">\n      <div>\n        <img src=\"../../assets/images/logo-white-variant.svg\" class=\"logo\">\n      </div>\n    </a>\n    <a (click)=\"currentViewState = 'kanban'; sidebar.toggle()\" class=\"item\">\n      <i class=\"chevron right icon\"></i>\n      <b><i class=\"columns icon\"></i> Board</b>\n    </a>\n    <a (click)=\"currentViewState = 'job-list';sidebar.toggle()\" class=\"item\">\n      <i class=\"chevron right icon\"></i>\n      <b><i class=\"briefcase icon\"></i> Positions</b>\n    </a>\n    <a (click)=\"currentViewState = 'applicant-list'; sidebar.toggle()\" class=\"item\">\n      <i class=\"chevron right icon\"></i>\n      <b><i class=\"address card icon\"></i> Applicants</b>\n    </a>\n\n  </sui-sidebar>\n  <sui-sidebar-sibling [isDimmedWhenVisible]=\"true\">\n    <div class=\"ui borderless top attached demo menu light-theme-color-bg\">\n      <a class=\"item icon-menu\" (click)=\"sidebar.toggle()\">\n        <i class=\"sidebar icon\"></i>\n      </a>\n      <a class=\"item\">\n        <input type=\"text\" name=\"search\" placeholder=\"Search..\">\n      </a>\n      <div class=\"right menu\">\n        <a class=\"item\">\n          <i class=\"bell icon icon-items\"></i>\n        </a>\n        <div class=\"ui simple dropdown link item\" suiDropdown>\n          <span class=\"text\">\n            <img class=\"ui avatar image\" [src]=\"currentUser.profileURL\"> {{currentUser.name}}\n          </span>\n          <i class=\"dropdown icon black\"></i>\n          <div class=\"menu\" suiDropdownMenu>\n            <h2 class=\"ui header\">\n              <img [src]=\"currentUser.profileURL\" class=\"ui image\"> {{currentUser.name}}\n            </h2>\n            <div class=\"item\" (click)=\"accountSettingsModal('Account Settings', currentUser)\">Account Settings</div>\n            <div class=\"item\" (click)=\"logout()\" style=\"color: #e24f4f !important;\">Sign out</div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <app-job *ngIf=\"currentViewState === 'kanban'\"></app-job>\n    <app-applicant-list *ngIf=\"currentViewState === 'applicant-list';\"></app-applicant-list>\n    <app-job-list *ngIf=\" currentViewState ==='job-list';\"></app-job-list>\n\n  </sui-sidebar-sibling>\n</sui-sidebar-container>\n\n<ng-template let-context let-modal=\"modal\" #modalTemplate>\n  <div class=\"header\">{{ context.titleModal }}</div>\n  <div class=\"content\">\n    <form class=\"ui form\">\n      <div class=\"field\">\n        <label for=\"name\">Username</label>\n        <input type=\"text\" id=\"name\" required [(ngModel)]=\"context.user.name\" name=\"name\">\n      </div>\n    </form>\n  </div>\n  <div class=\"actions\">\n    <button class=\"ui red button\" (click)=\"modal.deny()\">Cancel</button>\n    <button class=\"ui green button\" (click)=\"modal.approve()\" autofocus>OK</button>\n  </div>\n</ng-template>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserService } from '../core/user.service';\nimport { User } from '../model/User';\nimport { ModalTemplate, TemplateModalConfig, SuiModalService } from 'ng2-semantic-ui';\nimport { AuthService } from '../core/auth.service';\nimport { Router } from '@angular/router';\n\nexport interface IModalContext {\n  titleModal: string;\n  user: User;\n}\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  currentUser: User;\n  currentViewState: string;\n\n  @ViewChild('modalTemplate')\n  public modalTemplate: ModalTemplate<IModalContext, void, void>;\n\n  constructor(\n    public userService: UserService,\n    public authService: AuthService,\n    public router: Router,\n    public modalService: SuiModalService\n  ) { }\n\n  ngOnInit() {\n    this.currentUser = JSON.parse(localStorage.getItem('user'));\n    this.currentViewState = 'kanban';\n  }\n\n  public updateCurrentView(state) {\n    this.currentViewState = state;\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  accountSettingsModal(titleModal: string, user: User) {\n    const config = new TemplateModalConfig<IModalContext, void, void>(this.modalTemplate);\n    config.isClosable = false;\n    config.size = 'small';\n    config.transition = 'fade up';\n    config.transitionDuration = 400;\n    config.context = { titleModal: titleModal, user: user };\n\n    this.modalService\n      .open(config)\n      .onApprove(_ => {\n        this.userService.updateUser(this.currentUser.id, this.currentUser);\n      })\n      .onDeny(_ => { });\n  }\n}\n\n","<div class=\"ui container\" id=\"container-log-in\">\n  <div class=\"ui header center aligned\">\n    <a href=\"/\">\n      <img class=\"ui medium image\" href=\"/\" style=\"display:inline; bottom: 6.5px; left: 2px;\" src=\"../../assets/images/logo-black-variant.svg\">\n    </a>\n  </div>\n\n  <div class=\"ui basic segment\">\n    <div class=\"content\">\n      <button type=\"button\" class=\"ui fluid black button\" (click)=\"googleLogin()\" id=\"log-in-service\">\n        <i class=\"google icon\"></i>\n        Register with Gmail\n      </button>\n      <div class=\"ui horizontal divider\">\n        Or\n      </div>\n      <form class=\"ui form\" (ngSubmit)=\"register()\">\n        <div class=\"ui left icon input fluid\" id=\"input-register\">\n          <input type=\"text\" name=\"name\" [(ngModel)]=\"newUser.name\" placeholder=\"Name\">\n          <i class=\"left user icon\"></i>\n        </div>\n        <div class=\"ui left icon input fluid\" id=\"input-register\">\n          <input type=\"email\" name=\"email\" [(ngModel)]=\"newUser.email\" placeholder=\"Email address\">\n          <i class=\"left envelope icon\"></i>\n        </div>\n        <div class=\"ui left icon input fluid\" id=\"input-register\">\n          <input type=\"text\" name=\"title\" [(ngModel)]=\"newUser.title\" placeholder=\"Title\">\n          <i class=\"left id card icon\"></i>\n        </div>\n        <div class=\"ui left icon input fluid\" id=\"input-register\">\n          <input type=\"text\" name=\"company\" [(ngModel)]=\"newUser.company\" placeholder=\"Company\">\n          <i class=\"left building icon\"></i>\n        </div>\n        <div class=\"ui left icon input fluid\" id=\"input-register\">\n          <i class=\"lock icon\"></i>\n          <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" placeholder=\"Password\">\n        </div>\n        <div class=\"ui left icon input fluid\" id=\"input-register\">\n          <i class=\"lock icon\"></i>\n          <input type=\"password\" placeholder=\"Confirm password\">\n        </div>\n        <button type=\"submit\" class=\"ui fluid instagram button button-login\">Register Account</button>\n      </form>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../core/user.service';\nimport { User } from '../model/User';\nimport { AuthService } from '../core/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  newUser: User = new User();\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() { }\n\n  register() {\n    this.authService.registerUser(this.newUser.email, this.password).then(res => {\n      this.newUser.id = res.user.uid;\n      this.newUser.profileURL = 'https://cdn1.iconfinder.com/data/icons/mix-color-4/502/Untitled-1-512.png';\n      this.newUser.currentJobView = '';\n      this.newUser.jobIds = [];\n      localStorage.setItem('user', JSON.stringify(this.newUser));\n      this.userService.createUser(this.newUser);\n      this.router.navigate(['/app']);\n    });\n  }\n\n  googleLogin() {\n    this.authService.googleLogin().then(res => {\n      const currentUser: User = new User();\n      const fbUser = res.user;\n\n      if (res.additionalUserInfo.isNewUser) {\n        currentUser.id = fbUser.uid;\n        currentUser.name = fbUser.displayName;\n        currentUser.email = fbUser.email;\n        currentUser.profileURL = fbUser.photoURL;\n        currentUser.currentJobView = '';\n        currentUser.jobIds = [];\n        localStorage.setItem('user', JSON.stringify(currentUser));\n        this.userService.createUser(currentUser);\n        this.router.navigate(['/app']);\n        location.reload();\n      } else {\n        this.userService.getUserById(fbUser.uid).subscribe(user => {\n          if (!user.jobIds) {\n            user.jobIds = []; // temp fix because firebase doesn't store empty lists\n          }\n          localStorage.setItem('user', JSON.stringify(user));\n          this.router.navigate(['/app']);\n        });\n      }\n    }, err => {\n    });\n  }\n}\n","<div *ngIf=\"applied === false\">\n  <div id=\"job-info-container\" class=\"ui segments\">\n    <div class=\"ui segment\" style=\"background-color: #004a95;\">\n      <div id=\"job-name\"><b>Software Engineer | University of Ottawa</b></div>\n      <div id=\"job-info\">\n        <i class=\"building icon\"></i>\n        Ottawa, ON &nbsp;&nbsp;&nbsp;&nbsp;\n        <span>\n          <i class=\"briefcase icon\"></i>\n          Fulltime\n        </span>\n      </div>\n    </div>\n  </div>\n  <h3 style=\"margin-left: 20%;\">Apply\n    <i class=\"chevron right icon\"></i>\n  </h3>\n  <div id=\"job-form\" class=\"ui raised segment\">\n    <div class=\"content\">\n      <form class=\"ui form\">\n        <h3>Personal Info</h3>\n        <div class=\"field\">\n          <label for=\"name\">Full name</label>\n          <input type=\"text\" id=\"name\" required [(ngModel)]=\"newApplicant.name\" name=\"name\">\n        </div>\n        <div class=\"field\">\n          <label for=\"email\">Email Address</label>\n          <input type=\"text\" id=\"email\" required [(ngModel)]=\"newApplicant.email\" name=\"email\">\n        </div>\n        <div class=\"field\">\n          <label for=\"phoneNumber\">Phone Number</label>\n          <input type=\"text\" id=\"phoneNumber\" required [(ngModel)]=\"newApplicant.phoneNumber\" name=\"phoneNumber\">\n        </div>\n        <h3>Experience</h3>\n        <div class=\"field\">\n          <label for=\"employer\">Current employer (or most recent)</label>\n          <input type=\"text\" id=\"employer\" required [(ngModel)]=\"newApplicant.currentEmployer\" name=\"employer\">\n        </div>\n        <div class=\"field\">\n          <label for=\"title\">Role</label>\n          <input type=\"text\" id=\"title\" required [(ngModel)]=\"newApplicant.currentTitle\" name=\"title\">\n        </div>\n        <div id=\"resume-button\" class=\"ui left action input\">\n          <button class=\"ui active basic secondary labeled icon button\" style=\"width: 160px;\">\n              <i class=\"file pdf icon\"></i> Resume\n          </button>\n          <input type=\"file\" (change)=\"uploadResume($event)\" accept=\".pdf\" value=\"Upload resume\" />\n        </div>\n        <br>\n        <div id=\"letter-button\" class=\"ui left action input\">\n          <button class=\"ui active basic secondary labeled icon button\" style=\"width: 160px;\">\n            <i class=\"file pdf icon\"></i>\n            Cover Letter\n          </button>\n          <input type=\"file\" (change)=\"uploadCoverLetter($event)\" accept=\".pdf\" value=\"Upload cover letter\">\n        </div>\n        <h3>About You</h3>\n        <div class=\"field\">\n          <label for=\"description\">Tell us about yourself (200 words max)</label>\n          <textarea id=\"description\" rows=\"8\" required [(ngModel)]=\"newApplicant.about\" name=\"description\"></textarea>\n        </div>\n      </form>\n    </div>\n    <div class=\"ui basic center aligned segment\">\n      <button id=\"apply-button\" class=\"ui green button\" (click)=\"applyToJob()\">Apply</button>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"applied === true\">\n  <div id=\"applied-message\" class=\"ui center aligned segment\">\n    <h1>Thank you for applying!</h1>\n    <p>\n      We will be reviewing your application carefully and if selected you will receive an email covering the next steps.\n    </p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Applicant } from '../model/Applicant';\nimport { ApplicantService } from '../core/applicant.service';\nimport { AngularFireStorage, AngularFireStorageReference, AngularFireUploadTask } from 'angularfire2/storage';\n\n@Component({\n  selector: 'app-temp-apply',\n  templateUrl: './temp-apply.component.html',\n  styleUrls: ['./temp-apply.component.scss']\n})\nexport class TempApplyComponent implements OnInit {\n\n  refCoverLetter: AngularFireStorageReference;\n  taskCoverLetter: AngularFireUploadTask;\n  refResume: AngularFireStorageReference;\n  taskResume: AngularFireUploadTask;\n  newApplicant: Applicant = new Applicant();\n  applied: Boolean;\n\n  constructor(public applicantService: ApplicantService, public afStorage: AngularFireStorage) { }\n\n  ngOnInit() {\n    this.applied = false;\n  }\n\n  uploadResume(event) {\n    const id = Math.random().toString(36).substring(2);\n    this.refResume = this.afStorage.ref(id);\n    this.taskResume = this.refResume.put(event.target.files[0]);\n    this.taskResume.then( res => {\n      res.ref.getDownloadURL().then( res2 => {\n        this.newApplicant.resumeURL = res2;\n      });\n    });\n  }\n\n  uploadCoverLetter(event) {\n    const id = Math.random().toString(36).substring(2);\n    this.refCoverLetter = this.afStorage.ref(id);\n    this.taskCoverLetter = this.refCoverLetter.put(event.target.files[0]);\n    this.taskCoverLetter.then( res => {\n      res.ref.getDownloadURL().then( res2 => {\n        this.newApplicant.coverLetterURL = res2;\n      });\n    });\n  }\n\n  applyToJob() {\n    this.applicantService.addApplicant(this.newApplicant, '-LHeDXD-vULI8NjUrcAk');\n    this.applied = true;\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyCMophzPwRcBbbAqTFcaH9-zyVTXAeul40',\n    authDomain: 'talentboard-88518.firebaseapp.com',\n    databaseURL: 'https://talentboard-88518.firebaseio.com',\n    projectId: 'talentboard-88518',\n    storageBucket: 'talentboard-88518.appspot.com',\n    messagingSenderId: '540164168000'\n  }\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}